@inherits Andes.Shared.MathJaxContentFluxorComponent

<FluentDialogBody>
    <table>
        <tr>
            <td>Steps:</td>
            <td>@Content.Steps</td>
        </tr>

        <tr>
            <td>Explicit:</td>
            <td>
                @if (Content.IsExplicit)
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxChecked())" />
                }
                else
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxUnchecked())" />
                }
            </td>
        </tr>
        <tr>
            <td>Embedded:</td>
            <td>
                @if (Content.IsEmbedded)
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxChecked())" />
                }
                else
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxUnchecked())" />
                }
            </td>
        </tr>
        <tr>
            <td>Built in:</td>
            <td>
                @if (Content.IsBuiltIn)
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxChecked())" />
                }
                else
                {
                    <FluentIcon Value="@(new Icons.Regular.Size24.CheckboxUnchecked())" />
                }
            </td>
        </tr>
        <tr>
            <td>Order</td>
            <td>
                @if (Content.IsEmbedded) 
            {
                <div>@Content.B1Order / @Content.B2Order</div>
            }
            else
            {
                <div>@Content.Order</div>
            }
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <table style="text-align: center;border-collapse: true;">
                    <tr style="border-bottom: solid 1px;">
                        <td style="border-right: solid 1px;"><b>c</b></td>
                        <td><b>A</b></td>
                    </tr>
                    @for (var i = 0; i < Content.Steps; i++)
                    {
                        <tr>
                            <td style="border-right: solid 1px;" >@(Content.C[i] as ILaTexFormattable).ToLaTexString()</td>
                            @for (var j = 0;j < Content.Steps;j++)
                            {
                                <td>@(Content.A[i][j] as ILaTexFormattable).ToLaTexString()</td>
                            }
                        </tr>
                    }
                    @if (Content.IsEmbedded)
                    {
                        <tr style="border-top: solid 1px;">
                            <td style="border-right: solid 1px;"><b>b<sub>1</sub></b></td>
                            @for (var i = 0; i < Content.Steps; i++)
                            {
                                <td>@(Content.B1[i] as ILaTexFormattable).ToLaTexString()</td>
                            } 
                        </tr>
                        <tr>
                            <td style="border-right: solid 1px;"><b>b<sub>2</sub></b></td>
                            @for (var i = 0; i < Content.Steps; i++)
                            {
                                <td>@(Content.B2[i] as ILaTexFormattable).ToLaTexString()</td>
                            } 
                        </tr>
                    }
                    else {
                        <tr style="border-top: solid 1px;">
                            <td style="border-right: solid 1px;"><b>b</b></td>
                            @for (var i = 0; i < Content.Steps; i++)
                            {
                                <td>@(Content.B[i] as ILaTexFormattable).ToLaTexString()</td>
                            } 
                        </tr>
                    }
                </table>
            </td>
        </tr>
    </table>
</FluentDialogBody>